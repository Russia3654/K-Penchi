"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/sendOrderConfirmationEmail";
exports.ids = ["pages/api/sendOrderConfirmationEmail"];
exports.modules = {

/***/ "nodemailer":
/*!*****************************!*\
  !*** external "nodemailer" ***!
  \*****************************/
/***/ ((module) => {

module.exports = require("nodemailer");

/***/ }),

/***/ "(api)/./pages/api/sendOrderConfirmationEmail.js":
/*!*************************************************!*\
  !*** ./pages/api/sendOrderConfirmationEmail.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var nodemailer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nodemailer */ \"nodemailer\");\n\nasync function handler(req, res) {\n    if (req.method !== \"POST\") {\n        res.setHeader(\"Allow\", [\n            \"POST\"\n        ]);\n        return res.status(405).end(`Method ${req.method} Not Allowed`);\n    }\n    const { customer , cartItems , cost  } = req.body;\n    // Configure nodemailer transporter using SMTP and environment variables\n    const transporter = nodemailer__WEBPACK_IMPORTED_MODULE_0__.createTransport({\n        host: process.env.SMTP_HOST,\n        port: parseInt(process.env.SMTP_PORT) || 587,\n        secure: false,\n        auth: {\n            user: process.env.SMTP_USER,\n            pass: process.env.SMTP_PASS\n        }\n    });\n    // Helper function to format cart items into a readable string\n    function formatCartItems(cartItems, person) {\n        if (!Array.isArray(cartItems)) return {\n            text: \"\",\n            html: \"\"\n        };\n        let text = \"\";\n        let html = \"<ul>\";\n        cartItems.forEach((item)=>{\n            const name = item.name || \"Unnamed product\";\n            const quantity = item.quantity || 0;\n            const price = item.finalPrice !== undefined ? item.finalPrice : \"N/A\";\n            const color = item.selectedColor || \"N/A\";\n            let material = \"N/A\";\n            if (Array.isArray(item.combination)) {\n                item.combination.forEach((comb)=>{\n                    if (color === comb.color) {\n                        material = comb.material || material;\n                    }\n                });\n            }\n            text += `- ${name} (${color}, ${material}): Quantity ${quantity}, Price ${price}$\\n`;\n            html += `<li>${name} (${color}, ${material}): Quantity ${quantity}, Price ${price}$</li>`;\n        });\n        html += \"</ul>\";\n        if (person === \"client\") {\n            text += `\r\n        Total amount without shipping: ${cost[1]}$\\n\r\n        Shipping cost: ${cost[0]}$\\n\r\n        Total: ${cost[2]}$\r\n        `;\n            html += `\r\n        <p>Total amount without shipping: ${cost[1]}$</p>\r\n        <p>Shipping cost: ${cost[0]}$</p>\r\n        <p>Total: ${cost[2]}$</p>\r\n        `;\n        }\n        console.log(text);\n        return {\n            text,\n            html\n        };\n    }\n    const formattedToClient = formatCartItems(cartItems, \"client\");\n    const formattedToOwner = formatCartItems(cartItems, \"owner\");\n    const mailOptions = {\n        from: process.env.SMTP_USER,\n        to: customer.email,\n        subject: \"Order Confirmation\",\n        text: `Thank you for your order!\r\n            \\n\\nOrder Details:\\n${formattedToClient.text}\r\n            \\n\\nIf you have any questions, feel free to contact us.\r\n            \\n\\nBest regards,\r\n            \\nYour Company Name`,\n        html: `\r\n      <p>Thank you for your order!</p>\r\n      <h3>Order Details:</h3>\r\n      ${formattedToClient.html}\r\n      <p>If you have any questions, feel free to contact us.</p>\r\n      <p>Best regards,<br>Your Company Name</p>\r\n    `\n    };\n    const mailToOwner = {\n        from: process.env.SMTP_USER,\n        to: process.env.SMTP_USER,\n        subject: `New Order from ${customer.email}`,\n        text: `Order from ${customer.firstName} ${customer.lastName}.\r\n    \\n\\nOrder Details:\\n${formattedToOwner.text}`,\n        html: `\r\n      <p>Order from ${customer.firstName} ${customer.lastName}</p>\r\n      <h3>Order Details:</h3>\r\n      ${formattedToOwner.html}\r\n    `\n    };\n    try {\n        const info_1 = await transporter.sendMail(mailOptions);\n        const info_2 = await transporter.sendMail(mailToOwner);\n        res.status(200).json({\n            message: \"Email sent: \" + info_1.response\n        });\n    // res.status(200).json({ message: \"Email sent: \" + info_2.response });\n    } catch (error) {\n        console.error(\"Error sending email:\", error);\n        res.status(500).json({\n            error: \"Error sending email: \" + error.toString()\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/sendOrderConfirmationEmail.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/sendOrderConfirmationEmail.js"));
module.exports = __webpack_exports__;

})();